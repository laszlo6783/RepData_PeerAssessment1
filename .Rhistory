y[1]<-1
y[2]<2
y[2]<-2
for(i in 1:length(y)){y[i]<-i}
makeVektor(y)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVektor(y)
makeVector(y)
makeVector$get
makeVector$get()
get
get()
get(x)
get(y)
x={1 2,3 5}
B = matrix(
+   c(2, 4, 3, 1, 5, 7),
+   nrow=3,
+   ncol=2)
B = matrix(c(2, 4, 3, 1, 5, 7),  nrow=3,  ncol=2)
B
B<-b(1:2,1:2)
B<-b(1:2,1:2)
B<-B(1:2,1:2)
B = matrix(c(2, 4, 3, 1),  nrow=2,  ncol=2)
solve(B)
B*solve(B)
solve(B)*B
install.packages("swirl")
library(swirl)
swirl()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips<-sample(0:1,100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(n=100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
unclass(t1)
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot()
plot(dist,speed)
plot(cars$dist,cras$speed)
plot(cars$dist,cars$speed)
plot(x=speed,y=cars$dist)
plot(cars$dist,cars$speed,"Speed")
plot(x=cars$speed,y=cars$dist,clab="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, lab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab="Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, main="main")
plot(x = cars$speed, y = cars$dist, main="main")
windows()
?windows
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
qplot(votes, rating, data = movies)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,color="blue")
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
rug(low)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-pollution$region
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Vounties in Each Region")
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pollution,col="red",pm25~region)
boxplot(pollution,col="red","pm25"~region)
boxplot(pollution,pm25~region, col="red")
boxplot(pm25~region,data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region="east")
east<-subset(pollution,region=="east")
head(east)
hist(east,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pm25,latitude)
plot(pollution$pm25,pollution$latitude)
with(pollution,plot(latitude,pm25))
abline(lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(c(1,2),mar = c(5,4,2,1))
par(mfrow=c(1,2),mar = c(5,4,2,1))
west<-subset(pollution,pollution$region=="west")
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="east")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title("Old Faithful Heyser data")
title("Old Faithful Geyser data")
dev.curr()
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title("Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,distance))
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income|region,state$Income,layout=c(4,1))
xyplot(Life.Exp~Income|region,state,layout=c(4,1))
xyplot(Life.Exp~Income|region,state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm=TRUE)
hist(airquality$Ozone)
boxplot(airquality$Month)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb"),col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title("Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type.set="n")
plot(airquality$Wind,type="n",airquality$Ozone)
title("Wind and Ozone in NYC")
may<-subset(airquality,Month==5)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month<>5)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
vln(median(airquality$Wind),lty=2,width=2)
abline(median(airquality$Wind),lty=2,width=2)
?abline
abline(v=median(airquality$Wind),lty=2,width=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Wind,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Wind,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Wind,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer=TRUE)
bye()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone¬Wind,airquality)
xyplot(Ozone¬Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month),data=airquality,layout=c(5,1))
xyplot(Ozone~Wind| Month,data=airquality,layout=c(5,1))
p<-xplot(Ozone~Wind,data=airquality)
p<-xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathofile("plot1.R"),local=TRUE)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(myLabels.R)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,data=diamonds)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
colorRampPalette(c("red","blue"))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
OxCC
0xcc
p1<-colorRampPalette(c("red","yellow"))
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
colorRampPalette(c("blue","green"), alpha=0.5)
p3<-colorRampPalette(c("blue","green"), alpha=0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols<-prewer.pal(3,"BuGn")
cols<-brewer.pal(3,"BuGn")
showMe(cols)
pal<-(colorRampPalette(cols))
pal<-colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal20)
image(volcano,col=pal(20))
image(volcano,col=p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,col=drv)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(hwy,mpg,color=drv
)
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(color=drv,y=hwy,data=mpg,geom="boxplot")
qplot(color=drv,x=hwy,data=mpg,geom="boxplot")
qplot(y=hwy,data=mpg,color=drv,geom="boxplot")
qplot(y=hwy,data=mpg,color=drv)
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
library(swirl)
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets=.~drv,method="loess")
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
geom_smooth(g+geom_point())
geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
Sys.setlocale()
library(swirl)
swirl()
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,color=drv)
g+geom_point(size=4,alpha=1/2,color=aes(drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv),labs(title="Swirl Rules!"),labs(x="Displacement",y="Hwy Mileage"))
g+geom_point(aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl rules!")
g+geom_point(aes(color=drv))+labs(title="Swirl rules!")+labs(x="Displacement")
g+geom_point(aes(color=drv))+labs(title="Swirl rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,lyt=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylin=c(-3,3))
plot(myx,myy,type="l",ylim=c(-3,3))
g<-ggplot(testdata)
g<-ggplot(testdat)
g<-ggplot(testdat,aes(x=myx, y=myy))+geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(testdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- g + geom_line()
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line()+ylim(-3,3)
g + geom_line()+coord_cartesian(ylin=c(-3,3))
g + geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm")
qplot(carat,price,data=diamonds,color=cut,geom=c("point","smooth"),method="lm",facets=.~cut)
g<-ggplot(diamonds,aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(data=diamonds,aes(depth,price))
g+geom_point(aplha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
str(spam[,1:5])
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
dist(dataFrame)
hclust(distxy)
hclust(d=distxy)
hc<-hclust(d=distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
6
5
5
9
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx,cy,col=("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cez=2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
sorce(""addPatt.R,local=TRUE)
sorce("addPatt.R",local=TRUE)
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
0
0
bye()
library(swirl)
swirl()
matu
matu %%diag%% t(matv)
matu %% diag %% t(matv)
matu %*% diag %% t(matv)
matu %*% diag %*% t(matv)
svd(scale=mat)
svd(mat)
svd(scale(mat)0
svd(scale(mat))
bye()
setwd("RepData_PeerAssesment1")
setwd("RepData_PeerAssessment1")
